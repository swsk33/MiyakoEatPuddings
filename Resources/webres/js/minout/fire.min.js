let bulletArray=[];function genBulletByWeaponTemplate(weapon){let destObject={};for(let key in weapon){let property=weapon[key];destObject[key]=null==property?null:null==property?void 0:"object"==typeof property?genBulletByWeaponTemplate(property):property}return destObject}function fire(weapon){if(!isLoadingBullet){isLoadingBullet=!0,setTimeout((function(){isLoadingBullet=!1}),weapon.interval);let bullet=genBulletByWeaponTemplate(weapon);document.querySelector(bullet.soundClassName).play(),bullet.dom=bullet.shooting(miyako.offsetLeft+miyako.offsetWidth,miyako.offsetTop+.3*miyako.offsetHeight),bulletArray.push(bullet)}}function bulletFlyMainControl(bullets,enemies){for(let i=0;i<bullets.length;i++){let eachBullet=bullets[i],eachBulletDOM=eachBullet.dom;eachBullet.flying(eachBulletDOM);for(let j=0;j<enemies.length;j++)if(!enemies[j].isEaten){let criteria1=eachBulletDOM.offsetTop+eachBulletDOM.offsetHeight>=enemies[j].dom.offsetTop&&eachBulletDOM.offsetLeft+eachBulletDOM.offsetWidth>=enemies[j].dom.offsetLeft,criteria2=eachBulletDOM.offsetTop<=enemies[j].dom.offsetTop+enemies[j].dom.offsetHeight&&eachBulletDOM.offsetLeft<=enemies[j].dom.offsetLeft+enemies[j].dom.offsetWidth,criteriaTotal;if(criteria1&&criteria2){eachBullet.hitTrigger(eachBulletDOM,enemies[j],enemies),null==eachBulletDOM.offsetParent&&bullets.splice(i,1);break}}null!=eachBulletDOM.offsetParent&&eachBulletDOM.offsetLeft+eachBulletDOM.offsetWidth>=gameBackground.offsetWidth&&(eachBulletDOM.remove(),bullets.splice(i,0))}}function clearBullets(){for(let i=0;i<bulletArray.length;i++)bulletArray[i].dom.remove();bulletArray=[]}